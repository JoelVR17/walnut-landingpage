import { Footer } from '@/components/Footer'
import BlogHeader from '@/app/blog/components/BlogHeader';

export default function Blog() {
	return <>
		<BlogHeader />
		<div>
            <div className="max-w-8xl mx-auto">
                <div className="flex px-4 pt-8 pb-10 lg:px-8">
                    <a className="group flex font-semibold text-sm leading-6 text-slate-700 hover:text-slate-900" href="/blog">
                        <svg viewBox="0 -9 3 24" className="overflow-visible mr-3 text-slate-400 w-auto h-6 group-hover:text-slate-600">
                            <path d="M3 0L0 3L3 6" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                        </svg>
                        Go back
                    </a>
                </div>
            </div>
            <div className="px-4 sm:px-6 md:px-8">
                <div className="max-w-3xl mx-auto">
                    <main>
                        <article className="relative pt-10">
                            <h1 className="text-2xl font-extrabold tracking-tight text-slate-900 md:text-3xl ">
                            Welcome to Walnut blog
                            </h1>
                            <div className="text-sm leading-6">
                                <dl>
                                    <dt className="sr-only">Date</dt>
                                    <dd className="absolute top-0 inset-x-0 text-slate-700">
                                        Saturday, December 23, 2023
                                    </dd>
                                </dl>
                            </div>
                            <div className="mt-6">
                                <ul className="flex flex-wrap text-sm leading-6 -mt-6 -mx-5">
                                    <li className="flex items-center font-medium whitespace-nowrap px-5 mt-6">
                                        {/* <img src="/_next/static/media/adamwathan.8adb7a70.jpg" alt="" className="mr-3 w-9 h-9 rounded-full bg-slate-50" decoding="async" /> */}
                                        <div className="text-sm leading-4">
                                            <div className="text-slate-900">
                                                Roman Mazur
                                            </div>
                                            <div className="mt-1">
                                                <a target='_blank' href="https://twitter.com/romanmazur" className="text-sky-500 hover:text-sky-600">@romanmazur</a>
                                            </div>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                            <div className="mt-12 mb-24 prose">
                                <p className="lead">We are excited to launch this blog as a platform to share our experiences, challenges, and advancements in developing tools for blockchain engineers, focusing specifically on Starknet. Our goal is to foster insightful discussions and actively engage with community feedback.</p>
                                <p>Our mission is clear:</p>
                                <blockquote>
                                <p>We aim to empower every Starknet developer to achieve more.</p>
                                </blockquote>
                                <p>Our first product is a visual, step-by-step debugger designed for Starknet developers who work with Cairo. Currently in its closed Beta stage, we anticipate launching in Q1 2024. Walnut fills a critical gap building the first debugger for Cairo. If you're interested in early access, we'd love to hear from you.</p>
                                <p>While we recognize that a debugger alone is not enough to fulfill our mission for the rapidly expanding Starknet developer community, we see it as a crucial step. Beyond debugger, we plan to create an array of tools for Starknet developers. While we anticipate that what we build will depend on the state of Starknet tooling at the time we start the work, we are still listing some examples of tools and areas we are particularly interested in. If these areas interest you, or if you're actively involved in them, we encourage you to reach out and connect with us.</p>

                                <p><strong>Storage diff visualization.</strong> On Starknet, the majority of transaction costs come from storage. Developers need better tooling to get visibility into smart contract storage, how transactions affect it, so that they can reduce the memory footprint.</p>

                                <p><strong>Gas profiling.</strong> Execution on Starknet is generally cheap, but developers still need visibility into gas consumption. Poorly written contracts can eat a lot of gas, even on Starknet, and a good gas profiler can offer monitoring over such situations and ability to improve the gas footprint.</p>

                                <p>
                                Blockchain technology, with Starknet at its forefront, is poised to revolutionize the world. Starknet's vision, enabling individuals to freely implement and use any social function they desire, is a testament to the transformative power of blockchain. Developers are key to this change. With tools like the debugger and our upcoming developments, we're dedicated to supporting developers who will be instrumental in ensuring the success and growth of Starknet's ecosystem.
                                </p>

                                <p className='mt-12 text-gray-500'>* According to a detailed report by Electric Capital, Starknet has the fastest-growing number of full-time developers compared to other layer two ecosystems. Among the top 20 ecosystems (measured by full time developers), Starknet's number of full-time developers has increased by an incredible 622% in the last two years. This growth is much higher than Osmosis at 194% and Arbitrum at 125%, who are at 2nd and 3rd place respectively.</p>
                            </div>
                        </article>
                    </main>
                </div>
            </div>
        </div>


{/* <div className="relative not-prose [a:not(:first-child)>&amp;]:mt-12 [a:not(:last-child)>&amp;]:mb-12 my-12 first:mt-0 last:mb-0 rounded-2xl overflow-hidden [figure>&amp;]:my-0"><img src="/_next/static/media/catalyst-ui-kit.1b90ff54.png" alt="Overview of components included in Catalyst" decoding="async"><div className="absolute inset-0 rounded-2xl ring-1 ring-inset ring-slate-900/10 dark:ring-white/10"></div></div>
<p><strong>Catalyst is our first fully-componentized, batteries-included application UI kit</strong> — real React components with thoughtfully designed APIs that build on each other to create a real component architecture, the same way we’d do it in a real application.</p>
<p>Check out the <a href="https://catalyst.tailwindui.com">live demo</a>, read the <a href="https://catalyst.tailwindui.com/docs">documentation</a>, and if you’re a Tailwind UI All-Access customer, <a href="https://tailwindui.com/templates/catalyst/download">download it</a> and try it out in a new project today.</p>
<p><strong>Catalyst is currently in development preview</strong> and there’s a lot more to come, but we’re releasing it today so you can play with it right away as we continue to build new components and find ways to make it an even better experience.</p>
<hr>
<h2 className="flex whitespace-pre-wrap not-prose" id="your-components-not-ours"><a className="group relative border-none lg:-ml-2 lg:pl-2" href="#your-components-not-ours"><div className="absolute -ml-8 hidden items-center border-0 opacity-0 group-hover:opacity-100 group-focus:opacity-100 lg:flex">​<div className="flex h-6 w-6 items-center justify-center rounded-md text-slate-400 shadow-sm ring-1 ring-slate-900/5 hover:text-slate-700 hover:shadow hover:ring-slate-900/10 dark:bg-slate-700 dark:text-slate-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></div>Your components, not ours</a></h2>
<p>With Catalyst, we set out to build a UI kit that tomorrow’s Stripe or Linear would feel good about using to build their products — design-obsessed teams who want to own their UI components, and would never choose an off-the-shelf library.</p>
<p>So it’s not a dependency you install, instead you download the source and copy the components into your own project where they become the starting point for your own component system:</p>
<div className="relative not-prose [a:not(:first-child)>&amp;]:mt-12 [a:not(:last-child)>&amp;]:mb-12 my-12 first:mt-0 last:mb-0 rounded-2xl overflow-hidden [figure>&amp;]:my-0"><img src="/_next/static/media/catalyst-installation.fcfdb479.jpg" alt="" decoding="async"><div className="absolute inset-0 rounded-2xl ring-1 ring-inset ring-slate-900/10 dark:ring-white/10"></div></div>
<p>Want to change the border radius on your buttons? Just open <code>button.tsx</code> and change some classes. You don’t need to open a GitHub issue and try to convince us to expose a new configuration option.</p>
<p>Catalyst is a “disappearing UI kit” — six months after you’ve installed it, you should almost forget it wasn’t you who built the original components.</p>
<hr>
<h2 className="flex whitespace-pre-wrap not-prose" id="design-is-in-the-details"><a className="group relative border-none lg:-ml-2 lg:pl-2" href="#design-is-in-the-details"><div className="absolute -ml-8 hidden items-center border-0 opacity-0 group-hover:opacity-100 group-focus:opacity-100 lg:flex">​<div className="flex h-6 w-6 items-center justify-center rounded-md text-slate-400 shadow-sm ring-1 ring-slate-900/5 hover:text-slate-700 hover:shadow hover:ring-slate-900/10 dark:bg-slate-700 dark:text-slate-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></div>Design is in the details</a></h2>
<p>Getting the visual style right on a project like this is hard. We went into it with a few goals:</p>
<ul role="list">
<li><strong>Be competitive</strong> — we wanted to design something that could hold its own next to some of the nicest interfaces on the web today.</li>
<li><strong>Be timeless</strong> — we didn’t want to design something that would look dated in 6 months because it leaned too hard into specific trends.</li>
<li><strong>Be productive</strong> — whatever we designed needed to feel fast and efficient to real users, not just look great in a Dribbble shot.</li>
</ul>
<p>It took a lot of work and there were a lot of trade-offs to balance, but I’m really in love with where we ended up:</p>
<div className="relative not-prose [a:not(:first-child)>&amp;]:mt-12 [a:not(:last-child)>&amp;]:mb-12 my-12 first:mt-0 last:mb-0 rounded-2xl overflow-hidden [figure>&amp;]:my-0"><img src="/_next/static/media/catalyst-components.b9284341.png" alt="" decoding="async"><div className="absolute inset-0 rounded-2xl ring-1 ring-inset ring-slate-900/10 dark:ring-white/10"></div></div>
<p><strong>To be competitive</strong>, we invested in lots of details like subtle backdrop blurs on dropdown menus, perfecting the way shadows and borders blend with each other on form controls, and thoughtful use of animation in things like dialogs and toggle switches.</p>
<div className="relative not-prose [a:not(:first-child)>&amp;]:mt-12 [a:not(:last-child)>&amp;]:mb-12 my-12 first:mt-0 last:mb-0 rounded-2xl overflow-hidden [figure>&amp;]:my-0"><img src="/_next/static/media/catalyst-shadow-detail.7367bda7.png" alt="" decoding="async"><div className="absolute inset-0 rounded-2xl ring-1 ring-inset ring-slate-900/10 dark:ring-white/10"></div></div>
<p><strong>To be timeless</strong>, we tried to strike the right balance between flat and skeuomorphic design, with just enough depth cues that our components will look great even if the trends change a bit in either direction.</p>
<div className="relative not-prose [a:not(:first-child)>&amp;]:mt-12 [a:not(:last-child)>&amp;]:mb-12 my-12 first:mt-0 last:mb-0 rounded-2xl overflow-hidden [figure>&amp;]:my-0"><img src="/_next/static/media/catalyst-buttons.9ec6b2a1.png" alt="" decoding="async"><div className="absolute inset-0 rounded-2xl ring-1 ring-inset ring-slate-900/10 dark:ring-white/10"></div></div>
<p>We also took inspiration from the browser, and used unopinionated blue focus rings to avoid picking a treatment that might soon look out of fashion.</p>
<p><strong>To be productive</strong>, we worked carefully to make sure there was still plenty of whitespace, but that the UI was still dense enough to fit plenty of information on the screen.</p>
<div className="relative not-prose [a:not(:first-child)>&amp;]:mt-12 [a:not(:last-child)>&amp;]:mb-12 my-12 first:mt-0 last:mb-0 rounded-2xl overflow-hidden [figure>&amp;]:my-0"><img src="/_next/static/media/catalyst-table.b144027a.png" alt="" decoding="async"><div className="absolute inset-0 rounded-2xl ring-1 ring-inset ring-slate-900/10 dark:ring-white/10"></div></div>
<p>We also limited our use of transitions and animations only to places where it felt important, and even then tried to keep them fast so it never feels like you’re waiting on the UI.</p>
<div className="my-8 relative rounded-2xl overflow-hidden"><div className="absolute inset-0 rounded-2xl ring-1 ring-inset ring-slate-900/10 pointer-events-none"></div><video src="/_next/static/media/catalyst-switch.c86d5072b8c97c611dd52d9954d158b7e14192c4.mp4" autoplay="" playsinline="" loop="" muted="" className="block m-0"></video></div>
<p><strong>Catalyst also ships with full dark mode support</strong>, and anything you build with Catalyst components automatically adapts between light and dark modes.</p>
<div className="relative not-prose [a:not(:first-child)>&amp;]:mt-12 [a:not(:last-child)>&amp;]:mb-12 my-12 first:mt-0 last:mb-0 rounded-2xl overflow-hidden [figure>&amp;]:my-0"><img src="/_next/static/media/catalyst-components-dark-mode.bf236b3b.png" alt="" decoding="async"><div className="absolute inset-0 rounded-2xl ring-1 ring-inset ring-slate-900/10 dark:ring-white/10"></div></div>
<p>It’s not obvious, but there are a ton of little details we had to change to make things look their best in dark mode, like adjusting shadows, changing outer rings to inner rings to mimic the change in lighting, and more.</p>
<hr>
<h2 className="flex whitespace-pre-wrap not-prose" id="modeled-after-html"><a className="group relative border-none lg:-ml-2 lg:pl-2" href="#modeled-after-html"><div className="absolute -ml-8 hidden items-center border-0 opacity-0 group-hover:opacity-100 group-focus:opacity-100 lg:flex">​<div className="flex h-6 w-6 items-center justify-center rounded-md text-slate-400 shadow-sm ring-1 ring-slate-900/5 hover:text-slate-700 hover:shadow hover:ring-slate-900/10 dark:bg-slate-700 dark:text-slate-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></div>Modeled after HTML</a></h2>
<p>We spent a <em>lot</em> of time working on the component APIs, trying very hard to make things really easy to drop in and use right away, without compromising on flexibility.</p>
<p>It’s common for UI libraries to use APIs like this:</p>
<div className="mt-5 mb-8 first:mt-0 last:mb-0 from-pink-500 to-fuchsia-400 relative -mx-4 pt-6 pl-4 bg-gradient-to-b sm:mx-0 sm:rounded-2xl sm:pt-12 sm:pl-12"><div className="rounded-tl-xl overflow-hidden sm:rounded-br-xl"><div className="pt-2 bg-slate-800 shadow-lg group"><div className="flex text-slate-400 text-xs leading-6"><div className="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">JSX</div><div className="flex-auto flex items-center bg-slate-700/50 border border-slate-500/30 rounded-tl"></div></div><div className="children:my-0 children:!shadow-none children:bg-transparent"><pre className="language-jsx"><code className="language-jsx"><span className="token keyword">function</span> <span className="token function"><span className="token maybe-class-name">Example</span></span><span className="token punctuation">(</span><span className="token punctuation">)</span> <span className="token punctuation">{</span>
  <span className="token keyword control-flow">return</span> <span className="token punctuation">(</span>
    <span className="token tag"><span className="token tag"><span className="token punctuation">&lt;</span><span className="token class-name">TextField</span></span>
      <span className="token attr-name">name</span><span className="token attr-value"><span className="token punctuation attr-equals">=</span><span className="token punctuation">"</span>product_name<span className="token punctuation">"</span></span>
      <span className="token attr-name">label</span><span className="token attr-value"><span className="token punctuation attr-equals">=</span><span className="token punctuation">"</span>Product name<span className="token punctuation">"</span></span>
      <span className="token attr-name">description</span><span className="token attr-value"><span className="token punctuation attr-equals">=</span><span className="token punctuation">"</span>Use the name you'd like people to see in their cart.<span className="token punctuation">"</span></span>
    <span className="token punctuation">/&gt;</span></span>
  <span className="token punctuation">)</span>
<span className="token punctuation">}</span></code></pre></div></div></div></div>
<p>But with all the props living on the same component, it starts to get difficult to do things like add a class just to the <code>&lt;input&gt;</code> element itself.</p>
<p>Ultimately that led us to APIs that closely mirrored HTML, where it’s rare that a single component renders more than one element.</p>
<p>Creating a text field with Catalyst looks like this for example:</p>
<div className="mt-5 mb-8 first:mt-0 last:mb-0 from-indigo-500 to-blue-400 relative -mx-4 pt-6 pl-4 bg-gradient-to-b sm:mx-0 sm:rounded-2xl sm:pt-12 sm:pl-12"><div className="rounded-tl-xl overflow-hidden sm:rounded-br-xl"><div className="pt-2 bg-slate-800 shadow-lg group"><div className="flex text-slate-400 text-xs leading-6"><div className="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">JSX</div><div className="flex-auto flex items-center bg-slate-700/50 border border-slate-500/30 rounded-tl"></div></div><div className="children:my-0 children:!shadow-none children:bg-transparent"><pre className="language-jsx"><code className="language-jsx"><span className="token keyword module">import</span> <span className="token imports"><span className="token punctuation">{</span> <span className="token maybe-class-name">Description</span><span className="token punctuation">,</span> <span className="token maybe-class-name">Field</span><span className="token punctuation">,</span> <span className="token maybe-class-name">Label</span> <span className="token punctuation">}</span></span> <span className="token keyword module">from</span> <span className="token string">'@/components/fieldset'</span>
<span className="token keyword module">import</span> <span className="token imports"><span className="token punctuation">{</span> <span className="token maybe-class-name">Input</span> <span className="token punctuation">}</span></span> <span className="token keyword module">from</span> <span className="token string">'@/components/input'</span>

<span className="token keyword">function</span> <span className="token function"><span className="token maybe-class-name">Example</span></span><span className="token punctuation">(</span><span className="token punctuation">)</span> <span className="token punctuation">{</span>
  <span className="token keyword control-flow">return</span> <span className="token punctuation">(</span>
    <span className="token tag"><span className="token tag"><span className="token punctuation">&lt;</span><span className="token class-name">Field</span></span><span className="token punctuation">&gt;</span></span><span className="token plain-text">
      </span><span className="token tag"><span className="token tag"><span className="token punctuation">&lt;</span><span className="token class-name">Label</span></span><span className="token punctuation">&gt;</span></span><span className="token plain-text">Product name</span><span className="token tag"><span className="token tag"><span className="token punctuation">&lt;/</span><span className="token class-name">Label</span></span><span className="token punctuation">&gt;</span></span><span className="token plain-text">
      </span><span className="token tag"><span className="token tag"><span className="token punctuation">&lt;</span><span className="token class-name">Description</span></span><span className="token punctuation">&gt;</span></span><span className="token plain-text">Use the name you'd like people to see in their cart.</span><span className="token tag"><span className="token tag"><span className="token punctuation">&lt;/</span><span className="token class-name">Description</span></span><span className="token punctuation">&gt;</span></span><span className="token plain-text">
      </span><span className="token tag"><span className="token tag"><span className="token punctuation">&lt;</span><span className="token class-name">Input</span></span> <span className="token attr-name">name</span><span className="token attr-value"><span className="token punctuation attr-equals">=</span><span className="token punctuation">"</span>product_name<span className="token punctuation">"</span></span> <span className="token punctuation">/&gt;</span></span><span className="token plain-text">
    </span><span className="token tag"><span className="token tag"><span className="token punctuation">&lt;/</span><span className="token class-name">Field</span></span><span className="token punctuation">&gt;</span></span>
  <span className="token punctuation">)</span>
<span className="token punctuation">}</span></code></pre></div></div></div></div>
<p>By keeping things composable like this, it makes it really easy to do things like constrain the width of the input, without constraining the width of any of the other elements:</p>
<div className="mt-5 mb-8 first:mt-0 last:mb-0 from-fuchsia-500 to-purple-400 relative -mx-4 pt-6 pl-4 bg-gradient-to-b sm:mx-0 sm:rounded-2xl sm:pt-12 sm:pl-12"><div className="rounded-tl-xl overflow-hidden sm:rounded-br-xl"><div className="pt-2 bg-slate-800 shadow-lg group"><div className="flex text-slate-400 text-xs leading-6"><div className="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">JSX</div><div className="flex-auto flex items-center bg-slate-700/50 border border-slate-500/30 rounded-tl"></div></div><div className="children:my-0 children:!shadow-none children:bg-transparent"><pre className="language-diff-jsx"><code className="language-diff-jsx"><span className="token language-jsx unchanged"><span className="token keyword module">import</span><span className="token plain"> </span><span className="token imports punctuation">{</span><span className="token imports"> </span><span className="token imports maybe-class-name">Description</span><span className="token imports punctuation">,</span><span className="token imports"> </span><span className="token imports maybe-class-name">Field</span><span className="token imports punctuation">,</span><span className="token imports"> </span><span className="token imports maybe-class-name">Label</span><span className="token imports"> </span><span className="token imports punctuation">}</span><span className="token plain"> </span><span className="token keyword module">from</span><span className="token plain"> </span><span className="token string">'@/components/fieldset'</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain"></span><span className="token keyword module">import</span><span className="token plain"> </span><span className="token imports punctuation">{</span><span className="token imports"> </span><span className="token imports maybe-class-name">Input</span><span className="token imports"> </span><span className="token imports punctuation">}</span><span className="token plain"> </span><span className="token keyword module">from</span><span className="token plain"> </span><span className="token string">'@/components/input'</span><span className="token plain"></span>
</span><span className="token plain language-jsx unchanged">
</span><span className="token language-jsx unchanged"><span className="token plain"></span><span className="token keyword">function</span><span className="token plain"> </span><span className="token function maybe-class-name">Example</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="token plain"> </span><span className="token punctuation">{</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain">  </span><span className="token keyword control-flow">return</span><span className="token plain"> </span><span className="token punctuation">(</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain">    </span><span className="token tag punctuation">&lt;</span><span className="token tag class-name">Field</span><span className="token tag punctuation">&gt;</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain">      </span><span className="token tag punctuation">&lt;</span><span className="token tag class-name">Label</span><span className="token tag punctuation">&gt;</span><span className="token maybe-class-name">Product</span><span className="token plain"> name</span><span className="token tag punctuation">&lt;/</span><span className="token tag class-name">Label</span><span className="token tag punctuation">&gt;</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain">      </span><span className="token tag punctuation">&lt;</span><span className="token tag class-name">Description</span><span className="token tag punctuation">&gt;</span><span className="token maybe-class-name">Use</span><span className="token plain"> the name you'd like people to see </span><span className="token keyword">in</span><span className="token plain"> their cart</span><span className="token punctuation">.</span><span className="token tag punctuation">&lt;/</span><span className="token tag class-name">Description</span><span className="token tag punctuation">&gt;</span><span className="token plain"></span>
</span><span className="token language-jsx deleted"><span className="token plain">      </span><span className="token tag punctuation">&lt;</span><span className="token tag class-name">Input</span><span className="token tag"> </span><span className="token tag attr-name">name</span><span className="token tag attr-value punctuation attr-equals">=</span><span className="token tag attr-value punctuation">"</span><span className="token tag attr-value">product_name</span><span className="token tag attr-value punctuation">"</span><span className="token tag"> </span><span className="token tag punctuation">/&gt;</span><span className="token plain"></span>
</span><span className="token language-jsx inserted"><span className="token plain">      </span><span className="token tag punctuation">&lt;</span><span className="token tag class-name">Input</span><span className="token tag"> </span><span className="token tag attr-name">name</span><span className="token tag attr-value punctuation attr-equals">=</span><span className="token tag attr-value punctuation">"</span><span className="token tag attr-value">product_name</span><span className="token tag attr-value punctuation">"</span><span className="token tag"> </span><span className="token tag attr-name">className</span><span className="token tag attr-value punctuation attr-equals">=</span><span className="token tag attr-value punctuation">"</span><span className="token tag attr-value">max-w-sm</span><span className="token tag attr-value punctuation">"</span><span className="token tag"> </span><span className="token tag punctuation">/&gt;</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain">    </span><span className="token tag punctuation">&lt;/</span><span className="token tag class-name">Field</span><span className="token tag punctuation">&gt;</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain">  </span><span className="token punctuation">)</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain"></span><span className="token punctuation">}</span>
</span></code></pre></div></div></div></div>
<p>It also makes it easy to move the description <em>below</em> the input, instead of above:</p>
<div className="mt-5 mb-8 first:mt-0 last:mb-0 from-sky-500 to-cyan-300 relative -mx-4 pt-6 pl-4 bg-gradient-to-b sm:mx-0 sm:rounded-2xl sm:pt-12 sm:pl-12"><div className="rounded-tl-xl overflow-hidden sm:rounded-br-xl"><div className="pt-2 bg-slate-800 shadow-lg group"><div className="flex text-slate-400 text-xs leading-6"><div className="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">JSX</div><div className="flex-auto flex items-center bg-slate-700/50 border border-slate-500/30 rounded-tl"></div></div><div className="children:my-0 children:!shadow-none children:bg-transparent"><pre className="language-diff-jsx"><code className="language-diff-jsx"><span className="token language-jsx unchanged"><span className="token keyword module">import</span><span className="token plain"> </span><span className="token imports punctuation">{</span><span className="token imports"> </span><span className="token imports maybe-class-name">Description</span><span className="token imports punctuation">,</span><span className="token imports"> </span><span className="token imports maybe-class-name">Field</span><span className="token imports punctuation">,</span><span className="token imports"> </span><span className="token imports maybe-class-name">Label</span><span className="token imports"> </span><span className="token imports punctuation">}</span><span className="token plain"> </span><span className="token keyword module">from</span><span className="token plain"> </span><span className="token string">'@/components/fieldset'</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain"></span><span className="token keyword module">import</span><span className="token plain"> </span><span className="token imports punctuation">{</span><span className="token imports"> </span><span className="token imports maybe-class-name">Input</span><span className="token imports"> </span><span className="token imports punctuation">}</span><span className="token plain"> </span><span className="token keyword module">from</span><span className="token plain"> </span><span className="token string">'@/components/input'</span><span className="token plain"></span>
</span><span className="token plain language-jsx unchanged">
</span><span className="token language-jsx unchanged"><span className="token plain"></span><span className="token keyword">function</span><span className="token plain"> </span><span className="token function maybe-class-name">Example</span><span className="token punctuation">(</span><span className="token punctuation">)</span><span className="token plain"> </span><span className="token punctuation">{</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain">  </span><span className="token keyword control-flow">return</span><span className="token plain"> </span><span className="token punctuation">(</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain">    </span><span className="token tag punctuation">&lt;</span><span className="token tag class-name">Field</span><span className="token tag punctuation">&gt;</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain">      </span><span className="token tag punctuation">&lt;</span><span className="token tag class-name">Label</span><span className="token tag punctuation">&gt;</span><span className="token maybe-class-name">Product</span><span className="token plain"> name</span><span className="token tag punctuation">&lt;/</span><span className="token tag class-name">Label</span><span className="token tag punctuation">&gt;</span><span className="token plain"></span>
</span><span className="token language-jsx deleted"><span className="token plain">      </span><span className="token tag punctuation">&lt;</span><span className="token tag class-name">Description</span><span className="token tag punctuation">&gt;</span><span className="token maybe-class-name">Use</span><span className="token plain"> the name you'd like people to see </span><span className="token keyword">in</span><span className="token plain"> their cart</span><span className="token punctuation">.</span><span className="token tag punctuation">&lt;/</span><span className="token tag class-name">Description</span><span className="token tag punctuation">&gt;</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain">      </span><span className="token tag punctuation">&lt;</span><span className="token tag class-name">Input</span><span className="token tag"> </span><span className="token tag attr-name">name</span><span className="token tag attr-value punctuation attr-equals">=</span><span className="token tag attr-value punctuation">"</span><span className="token tag attr-value">product_name</span><span className="token tag attr-value punctuation">"</span><span className="token tag"> </span><span className="token tag attr-name">className</span><span className="token tag attr-value punctuation attr-equals">=</span><span className="token tag attr-value punctuation">"</span><span className="token tag attr-value">max-w-sm</span><span className="token tag attr-value punctuation">"</span><span className="token tag"> </span><span className="token tag punctuation">/&gt;</span><span className="token plain"></span>
</span><span className="token language-jsx inserted"><span className="token plain">      </span><span className="token tag punctuation">&lt;</span><span className="token tag class-name">Description</span><span className="token tag punctuation">&gt;</span><span className="token maybe-class-name">Use</span><span className="token plain"> the name you'd like people to see </span><span className="token keyword">in</span><span className="token plain"> their cart</span><span className="token punctuation">.</span><span className="token tag punctuation">&lt;/</span><span className="token tag class-name">Description</span><span className="token tag punctuation">&gt;</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain">    </span><span className="token tag punctuation">&lt;/</span><span className="token tag class-name">Field</span><span className="token tag punctuation">&gt;</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain">  </span><span className="token punctuation">)</span><span className="token plain"></span>
</span><span className="token language-jsx unchanged"><span className="token plain"></span><span className="token punctuation">}</span>
</span></code></pre></div></div></div></div>
<p>It took a lot of experimenting to figure out the right way to make these APIs work, especially around details like adding layout styles to the right children, but the payoff was worth it, and these components are really a delight to use.</p>
<hr>
<h2 className="flex whitespace-pre-wrap not-prose" id="powered-by-the-next-generation-of-headless-ui"><a className="group relative border-none lg:-ml-2 lg:pl-2" href="#powered-by-the-next-generation-of-headless-ui"><div className="absolute -ml-8 hidden items-center border-0 opacity-0 group-hover:opacity-100 group-focus:opacity-100 lg:flex">​<div className="flex h-6 w-6 items-center justify-center rounded-md text-slate-400 shadow-sm ring-1 ring-slate-900/5 hover:text-slate-700 hover:shadow hover:ring-slate-900/10 dark:bg-slate-700 dark:text-slate-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></div>Powered by the next generation of Headless UI</a></h2>
<p>We released the first version of <a href="https://headlessui.com/">Headless UI</a> back in the summer of 2020, but it’s been just over a year now since the last significant feature release because of all the work we’ve been focused on with Tailwind CSS itself.</p>
<p>Catalyst was the perfect excuse to get our hands dirty with Headless UI again, and we quickly found lots of ways to improve the project to simplify the code in Catalyst itself.</p>
<p>We just published Headless UI v2.0.0-alpha.1, which includes a ton of new stuff:</p>
<ul role="list">
<li><strong>Built-in anchor positioning</strong> — using <a href="https://floating-ui.com/">Floating UI</a>, components like <code>Menu</code>, <code>Listbox</code>, and more can now automatically position their popovers to be anchored to their trigger, adapting as needed to changes in the viewport.</li>
<li><strong>Headless checkbox component</strong> — we’ve added a headless <code>Checkbox</code> component to complement our existing <code>RadioGroup</code> component, making it easy to build totally custom checkbox controls.</li>
<li><strong>HTML form components</strong> — we’ve added <code>Input</code>, <code>Select</code>, <code>Textarea</code>, <code>Label</code>, <code>Description</code>, <code>Fieldset</code>, and <code>Legend</code> components that handle all of the ID generation and <code>aria-*</code> attribute mapping you need to do to connect form fields together.</li>
<li><strong>Improved hover and focus-visible detection</strong> — using hooks from the awesome <a href="https://react-spectrum.adobe.com/react-aria/hooks.html">React Aria</a> library under the hood, Headless UI now adds smarter <code>data-hover</code> and <code>data-focus</code> attributes to your controls that behave more consistently across different devices than the native pseudo-classes.</li>
<li><strong>Combobox list virtualization</strong> — the next version of Headless UI can now handle giant lists of combobox options with no performance issues.</li>
</ul>
<p>…with plenty of other improvements to come, including a date picker, tooltips, and more.</p>
<p>These improvements are React-only for now during this early alpha period, but we plan to bring all of these improvements to Vue as well before tagging v2.0.</p>
<p>We’ll have documentation published for this stuff really soon, but couldn’t resist getting Catalyst out before the holidays, even if it meant publishing the Headless UI docs a few days later.</p>
<hr>
<h2 className="flex whitespace-pre-wrap not-prose" id="try-it-out"><a className="group relative border-none lg:-ml-2 lg:pl-2" href="#try-it-out"><div className="absolute -ml-8 hidden items-center border-0 opacity-0 group-hover:opacity-100 group-focus:opacity-100 lg:flex">​<div className="flex h-6 w-6 items-center justify-center rounded-md text-slate-400 shadow-sm ring-1 ring-slate-900/5 hover:text-slate-700 hover:shadow hover:ring-slate-900/10 dark:bg-slate-700 dark:text-slate-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></div>Try it out</a></h2>
<p><a href="https://tailwindui.com/templates/catalyst">Catalyst</a> is a free update for all <a href="https://tailwindui.com/all-access">Tailwind UI All-Access</a> customers, and you can <a href="https://tailwindui.com/templates/catalyst/download">download it</a> and start playing with this first release today.</p>
<p>More work went into getting everything we’re releasing today just right than you could ever imagine, but we’re eager for feedback and ways it could be improved, so build some stuff with it and let us know what you think.</p>
<p>We’re going to take a couple weeks to recharge over the holidays, but we’ll be right back into Catalyst in the new year, working on new components like application layouts, comboboxes, command palettes, tooltips, and more.</p></div></article></main><footer className="mt-16"><div className="relative pb-28"><div className="absolute inset-0 w-full dark:w-screen overflow-hidden"><img src="/_next/static/media/blog-post-form@80.92cf987c.jpg" alt="" className="absolute top-px sm:left-auto sm:right-0 left-1/4 dark:hidden max-w-none" width="476" decoding="async"><img src="/_next/static/media/blog-post-form-dark@90.5b274bea.jpg" alt="" className="absolute top-px -left-1/4 sm:left-0 hidden dark:block max-w-none" width="1429" decoding="async"></div><section className="relative py-16 border-t border-slate-200 dark:border-slate-200/5"><h2 className="text-xl font-semibold text-slate-900 tracking-tight dark:text-white">Get all of our updates directly to your&nbsp;inbox.<br>Sign up for our newsletter.</h2><div className="mt-5 max-w-md"><form action="https://app.convertkit.com/forms/3181881/subscriptions" method="post" className="flex flex-wrap -mx-2"><div className="px-2 grow-[9999] basis-64 mt-3"><div className="group relative"><svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true" className="w-6 h-full absolute inset-y-0 left-3 text-slate-400 pointer-events-none group-focus-within:text-sky-500 dark:group-focus-within:text-slate-400"><path d="M5 7.92C5 6.86 5.865 6 6.931 6h10.138C18.135 6 19 6.86 19 7.92v8.16c0 1.06-.865 1.92-1.931 1.92H6.931A1.926 1.926 0 0 1 5 16.08V7.92Z"></path><path d="m6 7 6 5 6-5"></path></svg><input name="email_address" type="email" required="" autocomplete="email" aria-label="Email address" className="appearance-none shadow rounded-md ring-1 ring-slate-900/5 leading-5 sm:text-sm border border-transparent py-2 placeholder:text-slate-400 pl-12 pr-3 block w-full text-slate-900 focus:outline-none focus:ring-2 focus:ring-sky-500 bg-white dark:bg-slate-700/20 dark:ring-slate-200/20 dark:focus:ring-sky-500 dark:text-white" placeholder="Subscribe via email"></div></div><div className="px-2 grow flex mt-3"><button type="submit" className="bg-sky-500 flex-auto shadow text-white rounded-md text-sm border-y border-transparent py-2 font-semibold px-3 hover:bg-sky-600 dark:hover:bg-sky-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-300 dark:focus:ring-offset-slate-900 dark:focus:ring-sky-700">Subscribe</button> */}


		<Footer />
	</>
}
